AWSTemplateFormatVersion: '2010-09-09'
Description: 'Create EventBridge Rule and Add Lambda as Target'

Resources:
  TestingIAMRole:
    Type: 'AWS::IAM::Role'
    Properties:
      RoleName: testing_iam_role
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: 'Allow'
            Principal:
              Service: 'lambda.amazonaws.com'
            Action: 'sts:AssumeRole'
      Policies:
        - PolicyName: AWSLambdaBasicExecutionRole
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: 'Allow'
                Action:
                  - 'logs:CreateLogGroup'
                  - 'logs:CreateLogStream'
                  - 'logs:PutLogEvents'
                Resource: '*'
        - PolicyName: AWSLambdaS3FullAccess
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: 'Allow'
                Action:
                  - 's3:GetObject'
                  - 's3:PutObject'
                  - 's3:ListBucket'
                Resource:
                  - '*'
        - PolicyName: AWSLambdaSESFullAccess
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: 'Allow'
                Action:
                  - 'ses:SendEmail'
                  - 'ses:SendRawEmail'
                Resource: '*'
        - PolicyName: AWSLambdaSQSFullAccess
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: 'Allow'
                Action:
                  - 'sqs:SendMessage'
                  - 'sqs:ReceiveMessage'
                  - 'sqs:DeleteMessage'
                Resource: '*'
        - PolicyName: AWSLambdaSSMReadOnlyAccess
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: 'Allow'
                Action: 'ssm:GetParameters'
                Resource: '*'
        - PolicyName: AWSLambdaCloudWatchFullAccess
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: 'Allow'
                Action:
                  - 'cloudwatch:*'
                Resource: '*'
        - PolicyName: AWSLambdaCloudWatchLogsFullAccess
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: 'Allow'
                Action:
                  - 'logs:*'
                Resource: '*'
        - PolicyName: AWSLambdaSecretsManagerReadWrite
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: 'Allow'
                Action:
                  - 'secretsmanager:GetSecretValue'
                  - 'secretsmanager:PutSecretValue'
                  - 'secretsmanager:DeleteSecret'
                  - 'secretsmanager:ListSecretVersionIds'
                Resource: '*'

  TestingLambdaFunction:
    Type: 'AWS::Lambda::Function'
    Properties:
      Handler: index.handler
      Role: !GetAtt TestingIAMRole.Arn
      FunctionName: testingnov_15
      Runtime: python3.7
      Timeout: 900
      MemorySize: 128
      Environment:
        Variables:
          email_1: kavanoor.aditya@wildbrain.com
      Code:
        ZipFile: |
          # Your Python code goes here
          def handler(event, context):
              print("Hello from Lambda!")

  MyEventBridgeRule:
    Type: 'AWS::Events::Rule'
    Properties:
      Name: november15test
      EventBusName: 'aws.partner/rightsline.com/prd-div191-v4'
      EventPattern:
        source:
          - 'aws.partner/rightsline.com/prd-div191-v4'
      State: 'ENABLED'
      Targets:
        - Arn: !GetAtt TestingLambdaFunction.Arn
          Id: TestingLambdaFunctionTarget
